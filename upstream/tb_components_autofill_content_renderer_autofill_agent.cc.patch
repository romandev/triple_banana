diff --git tb/components/autofill/content/renderer/autofill_agent.cc tb_diff/components/autofill/content/renderer/autofill_agent.cc
--- tb/components/autofill/content/renderer/autofill_agent.cc
+++ tb_diff/components/autofill/content/renderer/autofill_agent.cc
@@ -66,6 +66,12 @@
 #include "ui/base/l10n/l10n_util.h"
 #include "ui/events/keycodes/keyboard_codes.h"
 
+#if defined(ENABLE_TRIPLE_BANANA)
+#include "third_party/blink/public/common/input/web_coalesced_input_event.h"
+#include "third_party/blink/public/web/web_frame_widget.h"
+#include "ui/latency/latency_info.h"
+#endif
+
 using blink::WebAutofillClient;
 using blink::WebAutofillState;
 using blink::WebAXObject;
@@ -570,12 +576,42 @@ void AutofillAgent::AcceptDataListSuggestion(const base::string16& value) {
 
 void AutofillAgent::FillPasswordSuggestion(const base::string16& username,
                                            const base::string16& password) {
+  co_begin();
+
   if (element_.IsNull())
     return;
 
+#if defined(ENABLE_TRIPLE_BANANA)
+  if (!co_await(bool, manager_->Authenticate) || !password_autofill_agent_)
+    return;
+#endif
+
   bool handled =
       password_autofill_agent_->FillSuggestion(element_, username, password);
+#if defined(ENABLE_TRIPLE_BANANA)
+  if (!handled || !render_frame() || !render_frame()->GetRenderView())
+    return;
+
+  auto* web_widget =
+      render_frame()->GetRenderView()->GetWebView()->MainFrameWidget();
+  if (!web_widget)
+    return;
+
+  blink::WebKeyboardEvent keyboard_event;
+  keyboard_event.windows_key_code = ui::VKEY_RETURN;
+  keyboard_event.SetModifiers(blink::WebInputEvent::kIsKeyPad);
+  keyboard_event.text[0] = ui::VKEY_RETURN;
+  keyboard_event.SetType(blink::WebInputEvent::Type::kKeyDown);
+  web_widget->HandleInputEvent(
+      blink::WebCoalescedInputEvent(keyboard_event, ui::LatencyInfo()));
+  keyboard_event.SetType(blink::WebInputEvent::Type::kKeyUp);
+  web_widget->HandleInputEvent(
+      blink::WebCoalescedInputEvent(keyboard_event, ui::LatencyInfo()));
+
+  co_return();
+#else
   DCHECK(handled);
+#endif
 }
 
 void AutofillAgent::PreviewPasswordSuggestion(const base::string16& username,
