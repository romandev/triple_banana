diff --git tb/components/password_manager/content/browser/content_password_manager_driver.cc tb_diff/components/password_manager/content/browser/content_password_manager_driver.cc
--- tb/components/password_manager/content/browser/content_password_manager_driver.cc
+++ tb_diff/components/password_manager/content/browser/content_password_manager_driver.cc
@@ -29,6 +29,10 @@
 #include "third_party/blink/public/common/associated_interfaces/associated_interface_provider.h"
 #include "ui/base/page_transition_types.h"
 
+#if defined(ENABLE_TRIPLE_BANANA)
+#include "base/strings/utf_string_conversions.h"
+#endif
+
 using autofill::mojom::FocusedFieldType;
 
 namespace {
@@ -64,6 +68,9 @@ ContentPasswordManagerDriver::ContentPasswordManagerDriver(
       password_generation_helper_(client, this),
       password_autofill_manager_(this, autofill_client, client),
       is_main_frame_(render_frame_host->GetParent() == nullptr),
+#if defined(ENABLE_TRIPLE_BANANA)
+      encrypter_(AutoBind(encrypter::mojom::EncrypterManager)),
+#endif
       password_manager_receiver_(this) {
   static unsigned next_free_id = 0;
   id_ = next_free_id++;
@@ -146,7 +153,17 @@ void ContentPasswordManagerDriver::TouchToFillClosed(
 void ContentPasswordManagerDriver::FillSuggestion(
     const base::string16& username,
     const base::string16& password) {
+#if defined(ENABLE_TRIPLE_BANANA)
+  std::string decrypted_password;
+  co_begin();
+  decrypted_password = co_await(const std::string&, encrypter_->Decrypt,
+                                base::UTF16ToUTF8(password));
+  GetAutofillAgent()->FillPasswordSuggestion(
+      username, base::UTF8ToUTF16(decrypted_password));
+  co_return();
+#else
   GetAutofillAgent()->FillPasswordSuggestion(username, password);
+#endif
 }
 
 void ContentPasswordManagerDriver::FillIntoFocusedField(
