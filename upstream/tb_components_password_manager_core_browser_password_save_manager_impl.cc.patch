diff --git tb/components/password_manager/core/browser/password_save_manager_impl.cc tb_diff/components/password_manager/core/browser/password_save_manager_impl.cc
--- tb/components/password_manager/core/browser/password_save_manager_impl.cc
+++ tb_diff/components/password_manager/core/browser/password_save_manager_impl.cc
@@ -20,6 +20,12 @@
 #include "components/password_manager/core/browser/votes_uploader.h"
 #include "components/password_manager/core/common/password_manager_features.h"
 
+#if defined(ENABLE_TRIPLE_BANANA)
+#include "base/strings/string_number_conversions.h"
+#include "base/strings/utf_string_conversions.h"
+#include "crypto/sha2.h"
+#endif
+
 using autofill::FieldRendererId;
 using autofill::FormData;
 using autofill::FormFieldData;
@@ -174,6 +180,30 @@ void PasswordSaveManagerImpl::CreatePendingCredentials(
       submitted_form, generated_password, is_http_auth, is_credential_api_save,
       similar_saved_form);
 
+#if defined(ENABLE_TRIPLE_BANANA)
+  if (IsPasswordUpdate()) {
+    const std::string hashed_new_password = crypto::SHA256HashString(
+        base::UTF16ToUTF8(pending_credentials_.password_value));
+    encrypter_->GetEncryptedDataFromCipherText(
+        base::UTF16ToUTF8(similar_saved_form->password_value),
+        base::BindOnce(
+            [](PasswordSaveManagerImpl* password_save_manager,
+               const std::string& hashed_new_password,
+               encrypter::mojom::EncryptedDataPtr encrypted_data) {
+              if (hashed_new_password == encrypted_data->hashed_text) {
+                password_save_manager->pending_credentials_state_ =
+                    PendingCredentialsState::EQUAL_TO_SAVED_MATCH;
+                password_save_manager->votes_uploader_->set_password_overridden(
+                    false);
+              }
+            },
+            this,
+            base::ToLowerASCII(base::HexEncode(hashed_new_password.c_str(),
+                                               hashed_new_password.size()))));
+    return;
+  }
+#endif
+
   if (votes_uploader_)
     SetVotesAndRecordMetricsForPendingCredentials(parsed_submitted_form);
 }
