diff --git tb/components/subresource_filter/core/browser/subresource_filter_features.cc tb_diff/components/subresource_filter/core/browser/subresource_filter_features.cc
--- tb/components/subresource_filter/core/browser/subresource_filter_features.cc
+++ tb_diff/components/subresource_filter/core/browser/subresource_filter_features.cc
@@ -117,18 +117,29 @@ int ParseInt(const base::StringPiece value) {
 std::vector<Configuration> FillEnabledPresetConfigurations(
     std::map<std::string, std::string>* params) {
   // If ad tagging is enabled, turn on the dryrun automatically.
+#if !defined(ENABLE_TRIPLE_BANANA)
   bool ad_tagging_enabled = base::FeatureList::IsEnabled(kAdTagging);
+#endif
   const struct {
     const char* name;
     bool enabled_by_default;
     Configuration (*factory_method)();
   } kAvailablePresetConfigurations[] = {
+#if defined(ENABLE_TRIPLE_BANANA)
+    // clang-format off
+      {kPresetLiveRunOnAllSites, true,
+       &Configuration::MakePresetForLiveRunOnAllSites}};
+#else
       {kPresetLiveRunOnPhishingSites, true,
        &Configuration::MakePresetForLiveRunOnPhishingSites},
       {kPresetPerformanceTestingDryRunOnAllSites, ad_tagging_enabled,
        &Configuration::MakePresetForPerformanceTestingDryRunOnAllSites},
       {kPresetLiveRunForBetterAds, true,
        &Configuration::MakePresetForLiveRunForBetterAds}};
+#endif
+#if defined(ENABLE_TRIPLE_BANANA)
+// clang-format on
+#endif
 
   CommaSeparatedStrings enabled_presets(
       TakeVariationParamOrReturnEmpty(params, kEnablePresetsParameterName));
@@ -274,6 +285,9 @@ const char kPresetPerformanceTestingDryRunOnAllSites[] =
     "performance_testing_dryrun_on_all_sites";
 const char kPresetLiveRunForBetterAds[] =
     "liverun_on_better_ads_violating_sites";
+#if defined(ENABLE_TRIPLE_BANANA)
+const char kPresetLiveRunOnAllSites[] = "liverun_on_all_sites";
+#endif
 
 // Configuration --------------------------------------------------------------
 
@@ -304,6 +318,16 @@ Configuration Configuration::MakePresetForLiveRunForBetterAds() {
   return config;
 }
 
+#if defined(ENABLE_TRIPLE_BANANA)
+// static
+Configuration Configuration::MakePresetForLiveRunOnAllSites() {
+  Configuration config(mojom::ActivationLevel::kEnabled,
+                       ActivationScope::ALL_SITES);
+  config.activation_conditions.priority = 500;
+  return config;
+}
+#endif
+
 Configuration::Configuration() = default;
 Configuration::Configuration(mojom::ActivationLevel activation_level,
                              ActivationScope activation_scope,
