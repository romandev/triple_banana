diff --git tb/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java tb_diff/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
--- tb/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
+++ tb_diff/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
@@ -670,6 +670,11 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
                 OfflinePageUtils.showOfflineSnackbarIfNecessary(tab);
             }
 
+            @Override
+            public void onUrlUpdated(Tab tab) {
+                org.banana.cake.interfaces.BananaTabManager.get().notifyUrlUpdated(tab);
+            }
+
             @Override
             public void onCrash(Tab tab) {
                 postDeferredStartupIfNeeded();
@@ -940,6 +945,13 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
         getManualFillingComponent().onResume();
     }
 
+    public PictureInPictureController getPipController() {
+        if (mPictureInPictureController == null) {
+            mPictureInPictureController = new PictureInPictureController();
+        }
+        return mPictureInPictureController;
+    }
+
     @Override
     protected void onUserLeaveHint() {
         super.onUserLeaveHint();
@@ -2092,9 +2104,15 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
                     currentTab.getWebContents().getNavigationController().getUseDesktopUserAgent();
             currentTab.getWebContents().getNavigationController().setUseDesktopUserAgent(
                     !usingDesktopUserAgent, reloadOnChange);
+            org.banana.cake.interfaces.BananaBottomToolbarController.get()
+                    .updateDesktopViewButtonState(!usingDesktopUserAgent);
+            org.banana.cake.interfaces.BananaButtonStateManager.get().updateDesktopPageButtonState(
+                    !usingDesktopUserAgent);
             RecordUserAction.record("MobileMenuRequestDesktopSite");
         } else if (id == R.id.reader_mode_prefs_id) {
             DomDistillerUIUtils.openSettings(currentTab.getWebContents());
+        } else if (id == R.id.banana_extension) {
+            org.banana.cake.interfaces.BananaExtensionSettings.get().open(this);
         } else {
             return false;
         }
